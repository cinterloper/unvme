#!/bin/bash
# Set up and bind NVME device to use with vfio driver.

PROG=$(basename "$0")

USAGE="Usage:
    ${PROG}                 # enable all NVMe devices for UNVMe
    ${PROG} [BB:DD.F]...    # enable specific NVMe devices for UNVMe
    ${PROG} reset           # reset all NVMe devices to kernel driver
    ${PROG} show            # show all NVMe devices mapping info"

source "$(dirname ${BASH_SOURCE[0]})"/common.sh
source "$(dirname ${BASH_SOURCE[0]})"/operations.sh

#
# Start here.
#
SSDLIST=$(lspci -Dn | grep '0108: ' | cut -d" " -f1)
if [ -z "${SSDLIST}" ]; then
    echo "No NVMe device found in system"
    exit 1
fi

if [ $# -eq 0 ]; then
    echo -e "# Setup all NVMe devices for UNVMe driver"
    vfio_check
    for d in ${SSDLIST}; do
        vfio_bind $d
    done
    print_map

elif [ "$1" == "reset" ]; then
    echo -e "# Reset all NVMe devices to kernel space driver"
    vfio_unbind_all
    mycmd "modprobe -r nvme"
    mycmd "modprobe nvme"
    sleep 3
    print_map

elif [ "$1" == "show" ]; then
    print_map

else
    vfio_check
    for i in $*; do
        case $i in
        [0-9a-f][0-9a-f]:*)
            if [ -z "$(lspci -n | grep $i\ 0108\:)" ]; then
                echo -e "No NVMe device at PCI $i"
                myusage
                exit
            fi
            ;;

        *)
            myusage
            ;;
        esac
    done

    echo -e "# Setup specific NVMe device(s) for UNVMe driver"
    for i in $*; do
        vfio_bind $(find /sys/bus/pci/devices/*$i -printf %f)
    done
    print_map
fi

